generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id           String  @id @db.VarChar(24)
  display_name String  @db.VarChar(50)
  username     String  @unique @db.VarChar(15)
  bio          String? @db.VarChar(160)
  password     String  @db.VarChar(60)

  posts     post[]
  following relationship[] @relation("following")
  followers relationship[] @relation("followers")

  created_at          DateTime  @default(now())
  updated_at          DateTime  @updatedAt
  username_updated_at DateTime?
  deleted_at          DateTime?
}

// John (follower_id) is following Bar (following_id)
model relationship {
  follower_id  String   @db.VarChar(24)
  following_id String   @db.VarChar(24)
  created_at   DateTime @default(now())

  follower  user @relation("following", fields: [follower_id], references: [id])
  following user @relation("followers", fields: [following_id], references: [id])

  @@id([follower_id, following_id])
}

model post {
  id        String @id @db.VarChar(24)
  content   String
  author_id String @db.VarChar(24)

  author user @relation(fields: [author_id], references: [id])

  is_edited           Boolean? @default(false)
  original_version_id String?  @db.VarChar(24)
  original_version    post?    @relation("post_versions", fields: [original_version_id], references: [id])
  new_versions        post[]   @relation("post_versions")

  reposted_post_id String? @db.VarChar(24)
  reposted_post    post?   @relation("reposts", fields: [reposted_post_id], references: [id])
  reposts          post[]  @relation("reposts")

  root_post_id   String? @db.VarChar(24)
  parent_post_id String? @db.VarChar(24)

  parent_post post?  @relation("comments", fields: [parent_post_id], references: [id])
  comments    post[] @relation("comments")

  root_post     post?  @relation("flat_comments", fields: [root_post_id], references: [id])
  flat_comments post[] @relation("flat_comments")

  created_at DateTime  @default(now())
  deleted_at DateTime?
}
